+ 支付的功能
	+ 微信的支付(模式二)

	+ 畅购的支付的业务解决方案

		+ 生成二维码

		+ 通知支付的结果

		+ 检测状态

	+ 修改订单的的相关的状态


	+ 定时进行查询 做相关的处理



+ httpclient 
	就是apache的项目 就是一个jar,用来模拟浏览器 发送请求  接收响应.





+生成二维码
	思路:
		前端 发送ajax请求:
		后台接收请求 接收 订单号 接收金额数据
		调用service---->调用httpclient ---->调用统一下单API的接口--->微信的支付系统
		返回给controller 返回前端

	请求:  /weixin/pay/create/native 

	参数:  交易订单号(out_trade_no) 和 支付的金额(total_fee)   	

	返回值:	result<Map>  map可以存储:金额,code_url,订单号(既是 交易订单号 又是订单表的的订单号)

	CONTROLLER SERVCIE dao


 No23400000004

+ 检测支付的状态
	思路:
		+前端传递 交易的订单号 到微服务
		
		+ 微服务接收 
		+ 使用httpclient 调用微信的查询订单的API 发送请求 获取该交易订单的支付的状态信息 

		+ 返回给前端


	 请求:/weixin/pay/status/query
	 参数: out_trade_no
	 返回值: result<Map>


 + 发送消息(微信支付系统通知畅购的微服务支付成功了)
	+ 生产者
		+ 依赖
		+ 发送消息
			+ 创建队列
			+ 创建交换机
			+ 创建binding


	+ 消费者

		+ 接收消息




+查询订单的支付的状态
	+ 通过定时任务

	+ 通过redis 设置key的有效期

	+ 通过rabbitmq的延时消息()
